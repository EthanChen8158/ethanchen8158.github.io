{"content":"{\"__ud_title\":\"大模型翻译折腾记录\",\"__ud_tags\":[],\"__ud_update_time\":1735461430870,\"__ud_create_time\":1735461137683,\"__ud_draft\":false,\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":1,\"id\":\"大模型翻译折腾记录\"},\"content\":[{\"type\":\"text\",\"text\":\"大模型翻译折腾记录\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m59cxdbo-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\"},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"自从2022年12月尝试过ChatGPT以来，就一直在不断尝试用大模型来进行翻译，陆陆续续试过许多模型，但总是不太完美，但是到最近，DeepSeek-V3发布后总算找到一个比较好用的了。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"最早用过GPT-3.5，但是最大的问题是购买API的门槛太高了，对调用IP也有要求，此外自己也不太喜欢用中转站，所以开始寻找替代品。之后在Azure提供OpenAI Service之后利用学生包和学校的名义开通了GPT-3.5和GPT-4的服务（目前学生包已无法申请开题OpenAIService），算是比较好用，但是对调用速率限制的很严格，只适合在Zotero中拿来看论文，拿来翻译网页不太好使。再之后，又尝试了Google的Gemini，也是会有速率的问题，遂注册了三个Google账号去申请API Key，然后自建了一个One-API，利用多个key进行轮询，使用起来也挺不错的，但是翻译效果有些时候不太满意。再然后也尝试过Groq上的Llama-3，这个优点是快和免费，但是效果也一般般，不过用来翻译网页也足够了。后面还试过一些国产的比如零一万物、Qwen还有文心一言，但都没有用多久就不用了。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"然后是到了最近，One-API遇上了投毒事件，于是就先停了这个服务，正好DeepSeek-V3发布，挺多人推荐，就试了一下，感觉翻译效果挺好的，而且价格实惠、没有调用速率的限制，使用了几天觉得挺不错的，决定后面都换这个了。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"目前是在Zotero和网页插件中配置了DeepSeek，在网页端本来一直用的沉浸式翻译这个插件，但是最近看到了一些关于他的负面新闻，所以切换到了Trancy，一个类似的插件。Trancy支持的自定义模型不多，只有OpenAI和DeepL，不过DeepSeek兼容OpenAI的调用方式，所以试了一下，刚开始遇到了一点问题，自定义域名里不能填DeepSeek官方文档给的“https://api.deepseek.com”或者用来兼容OpenAI的“https://api.deepseek.com/v1”，需要填入完整的“https://api.deepseek.com/v1/chat/completions”，然后就可以正常使用了，另外Zotero中的翻译插件也是需要填这个地址。\"}]}]}","title":"大模型翻译折腾记录","tags":[],"updateTime":1735461430870,"createTime":1735461137683,"draft":false,"intro":"","html":"<h1 level=\"1\" id=\"大模型翻译折腾记录\">大模型翻译折腾记录</h1><img src=\"/post-assets/m59cxdbo-image.png\" alt=\"image.png\"><p></p><p>自从2022年12月尝试过ChatGPT以来，就一直在不断尝试用大模型来进行翻译，陆陆续续试过许多模型，但总是不太完美，但是到最近，DeepSeek-V3发布后总算找到一个比较好用的了。</p><p>最早用过GPT-3.5，但是最大的问题是购买API的门槛太高了，对调用IP也有要求，此外自己也不太喜欢用中转站，所以开始寻找替代品。之后在Azure提供OpenAI Service之后利用学生包和学校的名义开通了GPT-3.5和GPT-4的服务（目前学生包已无法申请开题OpenAIService），算是比较好用，但是对调用速率限制的很严格，只适合在Zotero中拿来看论文，拿来翻译网页不太好使。再之后，又尝试了Google的Gemini，也是会有速率的问题，遂注册了三个Google账号去申请API Key，然后自建了一个One-API，利用多个key进行轮询，使用起来也挺不错的，但是翻译效果有些时候不太满意。再然后也尝试过Groq上的Llama-3，这个优点是快和免费，但是效果也一般般，不过用来翻译网页也足够了。后面还试过一些国产的比如零一万物、Qwen还有文心一言，但都没有用多久就不用了。</p><p>然后是到了最近，One-API遇上了投毒事件，于是就先停了这个服务，正好DeepSeek-V3发布，挺多人推荐，就试了一下，感觉翻译效果挺好的，而且价格实惠、没有调用速率的限制，使用了几天觉得挺不错的，决定后面都换这个了。</p><p>目前是在Zotero和网页插件中配置了DeepSeek，在网页端本来一直用的沉浸式翻译这个插件，但是最近看到了一些关于他的负面新闻，所以切换到了Trancy，一个类似的插件。Trancy支持的自定义模型不多，只有OpenAI和DeepL，不过DeepSeek兼容OpenAI的调用方式，所以试了一下，刚开始遇到了一点问题，自定义域名里不能填DeepSeek官方文档给的“https://api.deepseek.com”或者用来兼容OpenAI的“https://api.deepseek.com/v1”，需要填入完整的“https://api.deepseek.com/v1/chat/completions”，然后就可以正常使用了，另外Zotero中的翻译插件也是需要填这个地址。</p><script type=\"module\">const injectHtml = (root, html) => {\n  const iframe = document.createElement(\"iframe\");\n  const htmlContent = `<html><head></head><body>${html}</body></html>`;\n  iframe.style.width = \"100%\";\n  iframe.style.height = \"100%\";\n  iframe.onload = () => {\n    const doc = iframe.contentDocument || iframe.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n    doc.open();\n    doc.write(htmlContent);\n    doc.close();\n  };\n  root.replaceChildren(iframe);\n}\n  document.querySelectorAll('.playground')?.forEach(el=>{\n    const html = el.getAttribute('data-html');\n    if (html) {\n      injectHtml(el,html);\n    }\n    const indicator = document.createElement(\"div\");\n    indicator.className = \"indicator\";\n    const showCode = document.createElement(\"div\");\n    showCode.className = \"show-code\";\n    showCode.innerText = \"code\";\n    showCode.onclick = () => {\n      el.parentElement.classList.remove(\"preview-only\");\n    };\n    const showPreview = document.createElement(\"div\");\n    showPreview.className = \"show-preview\";\n    showPreview.innerText = \"preview\";\n    showPreview.onclick = () => {\n      el.parentElement.classList.add(\"preview-only\");\n    };\n    indicator.appendChild(showCode);\n    indicator.appendChild(showPreview);\n    el.parentElement.appendChild(indicator);\n    if (window.screen.width < 768) {\n      showPreview.click();\n    }\n  });</script>","cover":{"src":"/post-assets/m59cxdbo-image.png","alt":"image.png","title":null},"id":"大模型翻译折腾记录","path":"/posts/大模型翻译折腾记录.json"}